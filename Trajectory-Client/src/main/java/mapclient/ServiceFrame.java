/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mapclient;

import com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author brkyzdmr
 */
public class ServiceFrame extends javax.swing.JFrame {
    
    private String mapUrl;
    private MainFrame mf = MainFrame.getInstance();
    private static ServiceFrame instance = new ServiceFrame();
    private int zoomAmount = 17;

    public static ServiceFrame getInstance() {
        return instance;
    }
    
    public ServiceFrame() {  
        LookNFeel();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_RedMap = new javax.swing.JLabel();
        txtNumberOfPoint = new javax.swing.JLabel();
        txtReductionRate = new javax.swing.JLabel();
        txtThreadTime = new javax.swing.JLabel();
        txtNumOfPoint = new javax.swing.JLabel();
        txtRedRate = new javax.swing.JLabel();
        txtThTime = new javax.swing.JLabel();
        btnZoomIn = new javax.swing.JButton();
        btnZoomOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gezinge Verisi İşleme - İndirgeme Ekranı");
        setResizable(false);

        lbl_RedMap.setBackground(new java.awt.Color(0, 0, 0));
        lbl_RedMap.setToolTipText("");

        txtNumberOfPoint.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtNumberOfPoint.setText("Number of Point: ");

        txtReductionRate.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtReductionRate.setText("Reduction Rate: ");

        txtThreadTime.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtThreadTime.setText("Thread Time:");

        txtNumOfPoint.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txtNumOfPoint.setText("00");

        txtRedRate.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txtRedRate.setText("0.11");

        txtThTime.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        txtThTime.setText("0:1564 sn");

        btnZoomIn.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        btnZoomIn.setText("+");
        btnZoomIn.setPreferredSize(new java.awt.Dimension(70, 50));
        btnZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomInActionPerformed(evt);
            }
        });

        btnZoomOut.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        btnZoomOut.setText("-");
        btnZoomOut.setPreferredSize(new java.awt.Dimension(70, 50));
        btnZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZoomOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_RedMap, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtReductionRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNumberOfPoint, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(txtThreadTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRedRate, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumOfPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtThTime, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(379, 379, 379)
                        .addComponent(btnZoomIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnZoomOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_RedMap, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNumberOfPoint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReductionRate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtThreadTime))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnZoomIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnZoomOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtNumOfPoint)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtRedRate)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtThTime))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomInActionPerformed
        zoomIn();
    }//GEN-LAST:event_btnZoomInActionPerformed

    private void btnZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZoomOutActionPerformed
        zoomOut();
    }//GEN-LAST:event_btnZoomOutActionPerformed

    public JLabel getTxtNumOfPoint() {
        return txtNumOfPoint;
    }

    public void setTxtNumOfPoint(JLabel txtNumOfPoint) {
        this.txtNumOfPoint = txtNumOfPoint;
    }

    public JLabel getTxtRedMap() {
        return lbl_RedMap;
    }

    public void setTxtRedMap(JLabel txtRedMap) {
        this.lbl_RedMap = txtRedMap;
    }

    public JLabel getTxtRedRate() {
        return txtRedRate;
    }

    public void setTxtRedRate(JLabel txtRedRate) {
        this.txtRedRate = txtRedRate;
    }

    public JLabel getTxtThTime() {
        return txtThTime;
    }

    public void setTxtThTime(JLabel txtThTime) {
        this.txtThTime = txtThTime;
    }  

    public JLabel gettxtReductionRate() {
        return txtReductionRate;
    }
    
    public void reloadMap(String mapUrl, String imageName) {
        try {
            Map.getImageFromUrl(mapUrl, imageName);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        ImageIcon icon = new ImageIcon(imageName + ".jpg");
        Image img = icon.getImage().getScaledInstance(lbl_RedMap.getWidth(),
                lbl_RedMap.getHeight(), Image.SCALE_SMOOTH);
        lbl_RedMap.setIcon(new ImageIcon(img));
    }
    
    private void zoomIn() {
        System.out.println("@>1 : " + mf.getRedMapUrl());
        mapUrl = Map.changeZoomAmount(mf.getRedMapUrl(), ++zoomAmount);

        reloadMap(mapUrl, "redmapcanvas");
        mf.setRedMapUrl(mapUrl);
    }
    
    private void zoomOut() {
        mapUrl = Map.changeZoomAmount(mf.getRedMapUrl(), --zoomAmount);
        reloadMap(mapUrl, "redmapcanvas");
        mf.setRedMapUrl(mapUrl);
    }
    
    private void LookNFeel() {
        try {
            UIManager.setLookAndFeel(new WindowsClassicLookAndFeel());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnZoomIn;
    private javax.swing.JButton btnZoomOut;
    private javax.swing.JLabel lbl_RedMap;
    private javax.swing.JLabel txtReductionRate;
    private javax.swing.JLabel txtNumberOfPoint;
    private javax.swing.JLabel txtNumOfPoint;
    private javax.swing.JLabel txtRedRate;
    private javax.swing.JLabel txtThTime;
    private javax.swing.JLabel txtThreadTime;
    // End of variables declaration//GEN-END:variables
}
